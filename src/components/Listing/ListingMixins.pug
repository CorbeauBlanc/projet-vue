mixin flash-message
	flash-message.sticky.top(name="listing")
mixin heading
	.h2.title
		block
		span.counter
			| {{ listLength }}

mixin search-filter
	text-input#search-filter(
		v-model="currentGlobalSearch"
		:config="searchConfig"
		@change="globalSearch($vnode.componentInstance)"
	)/

mixin advanced-filters-button
	button.button.ghost.filter.heading-button(
		:class="{ active: showFilters }"
		@click="showFilters = !showFilters"
	)
		icon(filter)/
		| {{ $t('Filtrer') }}

mixin advanced-filters(containerClass)
	#filters-container(v-show="showFilters")
		.container(class=containerClass)
			filters#advanced-filters(
				v-master:value="tableFilters"
				v-master:raw="rawTableFilters"
				:inputs="filtersConfig"
				:lazy="true"
			)/

mixin heading-secondary(containerClass)
	.container(class=containerClass)
		.heading.secondary.alt
			+search-filter
			div
				+advanced-filters-button
				block
	+advanced-filters(containerClass)

mixin table(containerClass, segmentClass, tableLabels)
	.container(class=containerClass)
		#table-container.segments
			.loading(v-if="tableIsLoading")
				.loader
			.segment.empty.state(v-if="listLength < 1 && tableIsLoading")
			.segment.empty.state.only-child(v-if="listLength < 1 && !tableIsLoading")
				icon(search huge)/
				h4.content {{ $t('Aucun résultat') }}
				p.content
					| {{ $t('Merci de retenter avec un autre mot clé ou en modifiant les filtres appliqués.') }}
				button.button.submit(@click="tableFilters = {}") {{ $t('Réinitialiser la recherche') }}
			.segment(class=segmentClass v-show="listLength > 0")
				custom-table.data(
					ref="table"
					:config="tableConfig"
					:labels=tableLabels
					:filters="tableFilters"
					@updated="onTableUpdate($vnode.componentInstance)"
					@loading="tableIsLoading = $event"
				)
					block
