/*
---
name: Global (Core)
category: Components
---

Colors

```colors-types.html hidden
<div class="demo colors grid">
<div class="column"><div class="segment inverted primary"><strong>primary</strong></div></div>
<div class="column"><div class="segment inverted secondary"><strong>secondary</strong></div></div>
<div class="column"><div class="segment inverted black"><strong>black</strong></div></div>
<div class="column"><div class="segment inverted grey"><strong>grey</strong></div></div>
<div class="column"><div class="segment inverted blue"><strong>blue</strong></div></div>
<div class="column"><div class="segment inverted green"><strong>green</strong></div></div>
<div class="column"><div class="segment inverted red"><strong>red</strong></div></div>
<div class="column"><div class="segment inverted yellow"><strong>yellow</strong></div></div>
</div>
```

Alignments

```align-types.html
<div class="compact segments">
		<div class="segment left aligned">Left</div>
		<div class="segment center aligned">Center</div>
		<div class="segment right aligned">Right</div>
</div>
```

Floating

Add "clearing" class to container to avoid weird bottom spacing
```floating-types.html
<div class="segment clearing">
		<div class="right floated">Right floated</div>
		<div class="left floated">Left floated</div>
</div>
```

Margins

Based on `$padding` value in `_variables.scss`
```margins-types.html
<div class="compact segment">
		<div class="label margin top">Label with top margin</div>
</div>
<div class="compact segment">
		<div class="label margin right">Label with right margin</div>
</div>
<div class="compact segment">
		<div class="label margin bottom">Label with bottom margin</div>
</div>
<div class="compact segment">
		<div class="label margin left">Label with left margin</div>
</div>
```

Text format with classes
```text-format-types.html
<p><span class="uppercase">uppercase</span></p>

<p><span class="em">Italic</span></p>

<p><span class="strong">Strong</span></p>

<p>Text with <sup>Superior</sup></p>

<p>Text with <sub>Inferior</span></sub>

<p class="hint">Hinting text ! Please, be relevant</p>
```
*/
h1,
h2,
h3,
h4,
h5,
p,
blockquote,
figure,
ol,
ul {
	margin: 0;
	padding: 0;
}

iframe {
	border: none;
}

main {
	display: block;
}

::-moz-selection {
	background: $default-color;
	color: $white;
}

::selection {
	background: $default-color;
	color: $white;
}

::-moz-focus-inner {
	padding: 0;
	border: none;
}

:focus {
	outline: 0;
}

// HTML
*,
*::before,
*::after {
	box-sizing: border-box;
}

html {
	font-size: 100%;
	text-size-adjust: 100%;

	margin: 0;
	height: 100%;
}

body {
	margin: 0;
	line-height: $base-line-height;
	font-family: $body-font;
	color: $text-color;
	font-size: $base-font-size;
	background: $background-color;
	height: 100%;
}

hr {
	width: 100%;
	margin: $padding auto;
	border: none;
	height: 0;
	border-top: 0;
	border-bottom: $border-width solid $border-color;
}

.floated.left {
	float: left;
}

.floated.right {
	float: right;
}

.antipodes {
	display: flex;
	justify-content: space-between;
}

.hidden:not(.icon) {
	visibility: hidden;
}

.visible {
	display: block;
}

.small-show,
.medium-show,
.large-show,
.xlarge-show {
	display: none;
}

// clear
/* .clearing {
	@include clearfix();
	zoom: 1;
} */


// Links
a,
.link {
	cursor: pointer;
	text-decoration: none;
	transition: color $normal-speed;
	text-decoration-skip: objects;
	color: $link-color;

	&:not(.button):not(.label) {

		@each $swatch,
		$color in $swatch {
			&.#{$swatch} {
				color: $color;
			}
		}
	}

	&:not(.button):not(.badge):not(.disabled) {

		&:active,
		&:hover {
			color: scale-color($link-color, $lightness: -40%);
		}

		@each $swatch,
		$color in $swatch {

			&.#{$swatch}:active,
			&.#{$swatch}:hover {
				color: scale-color($color, $lightness: -40%);
			}
		}
	}

	img {
		border: none;
	}
}

a, .link, .button {
	&.disabled {
		opacity: .6;
		cursor: not-allowed;
	}
}

// typography
p {
	margin-bottom: 1.1rem;
	text-rendering: optimizeLegibility;

	&:last-child {
		margin-bottom: 0;
	}
}

.aligned {
	&.left {
		text-align: left;
		text-align-last: auto;
		align-items: flex-start;
	}

	&.right {
		text-align: right;
		text-align-last: auto;
		align-items: flex-end;
	}

	&.center {
		text-align: center;
		text-align-last: auto;
		align-items: center;
	}
}

/* MARGIN */
.margin {
	&.top {
		margin-top: $padding;
		
		&.short {
			margin-top: math.div($padding, 2);
		}
	}

	&.bottom {
		margin-bottom: $padding;
		
		&.short {
			margin-bottom: math.div($padding, 2);
		}
	}

	&.left {
		margin-left: $padding;
		
		&.short {
			margin-left: math.div($padding, 2);
		}
	}

	&.right {
		margin-right: $padding;
		
		&.short {
			margin-right: math.div($padding, 2);
		}
	}
}

em,
.em {
	font-style: italic;
	line-height: inherit;
}

.uppercase {
	text-transform: uppercase;
}

strong,
b,
.strong {
	font-weight: bold;
	line-height: inherit;
}

.normal {
	font-weight: normal;
}

small {
	font-size: 80%;
}

sup,
sub {
	position: relative;
	font-size: 75%;
	line-height: 0;
	vertical-align: baseline;
}

sup {
	top: -.5rem;
}

sub {
	bottom: -.5rem;
}

.text-clip,
.text-clip li {
	text-overflow: clip;
	white-space: nowrap;
	overflow: hidden;
}

// Media
svg:not(:root) {
	overflow: hidden;
}

.video.container {
	position: relative;
	padding-bottom: 56.25%;
	height: 0;
	overflow: hidden;

	iframe,
	object,
	embed,
	video {
		position: absolute;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
	}
}

.text {

	@each $swatch,
	$color in $swatch {
		&.#{$swatch} {
			color: $color;
		}
	}

	&.muted {
		color: $text-muted;
	}

	&.inline {
		display: inline;

		&:not(:first-child) {
			margin-left: .3em;
		}

		&:not(:last-child) {
			margin-right: .3em;

			& + .text.inline {
				margin-left: unset;
			}
		}
	}
}

.hint {
	color: rgba($text-color, .7);
	margin-top: math.div($padding, 4);
	font-size: 0.8rem;
	line-height: $base-line-height;
	font-style: italic;
}

blockquote {
	background: scale-color($light-grey, $lightness: -5%);
	margin: $padding 0 $padding (-$padding);
	border-radius: 0 $large-radius $large-radius 0;
	padding: $padding;
	font-family: Georgia, "Times New Roman", "Bitstream Charter", Times, serif;
}

.code {
	font-family: Monaco, monospace;
}

// Show / Hide element depends of device

@include mobile {

	[class*="desktop only"],
	[class*="tablet only"] {
		display: none;
	}

	[class*="mobile only"] {
		display: block;
	}
}


@include tablet {

	[class*="desktop only"],
	[class*="mobile only"] {
		display: none;
	}

	[class*="tablet only"] {
		display: block;
	}
}

@include tablet-and-under {

	[class*="desktop only"],
	[class*="mobile only"] {
		display: none;
	}

	[class*="mobile and tablet only"] {
		display: block;
	}
}

@include desktop {

	[class*="tablet only"],
	[class*="mobile only"] {
		display: none;
	}

	[class*="desktop only"] {
		display: block;
	}
}

@include desktop-xl {

	[class*="tablet only"],
	[class*="mobile only"] {
		display: none;
	}

	[class*="desktop only"] {
		display: block;
	}
}
