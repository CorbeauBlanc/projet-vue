/*
---
name: Button
category: Components
---

Default
```types.html
<div class="button">I'm the default</div>
```

Visual variants
```spec-types.html
<div class="button ghost">Ghost</div>
<div class="button raised">Raised (shadowed)</div>
<div class="button rounded">Rounded</div>
<div class="button flat">Flat</div>
<div class="button rounded flat raised">Rounded flat & raised</div>
```

Behaviours
```behaviours-types.html
<div class="button active">button active</div>
<div class="button disabled">button disabled</div>
```

With an icon
```icon-types.html
<div class="button"><i class="icon search"></i> With an icon</div>
<div class="button icon"><i class="icon search"></i></div>
```

You can use a button on a dark background (inverted)
```inverted-types.html
<div class="black inverted segment">
	<div class="button inverted">I'm inverted... but I'm still a button</div>
	<div class="button inverted ghost">I'm inverted & ghost... but I'm still a button</div>
</div>
```

Fluid
```fluid-types.html
<div class="button fluid">My width is 100% !</div>
```

Sizes
```sizes-types.html
<div class="button small">I'm small</div>
<div class="button">I'm the default</div>
<div class="button big">I'm big</div>
<div class="button huge">I'm huge</div>
```

Colors
```colors-types.html
<style>
td .button {
		width: 100%;
		margin-bottom: .5rem;
}
</style>
<table class="demo-button">
		<tr>
				<th>Base</th>
				<th>Active</th>
				<th>Inverted</th>
				<th>Disabled</th>
				<th>Ghost</th>
				<th>Ghost inverted</th>
				<th>Flat</th>
		</tr>
		<tr>
				<td>
						<div class="button">Default</div>
						<div class="button primary">primary</div>
						<div class="button secondary">secondary</div>
						<div class="button blue">blue</div>
						<div class="button yellow">yellow</div>
						<div class="button orange">orange</div>
						<div class="button red">red</div>
						<div class="button green">green</div>
						<div class="button grey">grey</div>
				</td>
				<td>
						<div class="button active">Default</div>
						<div class="button active primary">primary</div>
						<div class="button active secondary">secondary</div>
						<div class="button active blue">blue</div>
						<div class="button active yellow">yellow</div>
						<div class="button active orange">orange</div>
						<div class="button active red">red</div>
						<div class="button active green">green</div>
						<div class="button active grey">grey</div>
				</td>
				<td style="background: #05101f; padding:0 15px">
						<div class="button inverted">Default</div>
						<div class="button inverted primary">primary</div>
						<div class="button inverted secondary">secondary</div>
						<div class="button inverted blue">blue</div>
						<div class="button inverted yellow">yellow</div>
						<div class="button inverted orange">orange</div>
						<div class="button inverted red">red</div>
						<div class="button inverted green">green</div>
						<div class="button inverted grey">grey</div>
				</td>
				<td>
						<div class="button disabled">Default</div>
						<div class="button disabled primary">primary</div>
						<div class="button disabled secondary">secondary</div>
						<div class="button disabled blue">blue</div>
						<div class="button disabled yellow">yellow</div>
						<div class="button disabled orange">orange</div>
						<div class="button disabled red">red</div>
						<div class="button disabled green">green</div>
						<div class="button disabled grey">grey</div>
				</td>
				<td>
						<div class="button ghost">Default</div>
						<div class="button ghost primary">primary</div>
						<div class="button ghost secondary">secondary</div>
						<div class="button ghost blue">blue</div>
						<div class="button ghost yellow">yellow</div>
						<div class="button ghost orange">orange</div>
						<div class="button ghost red">red</div>
						<div class="button ghost green">green</div>
						<div class="button ghost grey">grey</div>
				</td>
				<td style="background: #05101f; padding:0 15px">
						<div class="button ghost inverted">Default</div>
						<div class="button ghost inverted primary">primary</div>
						<div class="button ghost inverted secondary">secondary</div>
						<div class="button ghost inverted blue">blue</div>
						<div class="button ghost inverted yellow">yellow</div>
						<div class="button ghost inverted orange">orange</div>
						<div class="button ghost inverted red">red</div>
						<div class="button ghost inverted green">green</div>
						<div class="button ghost inverted grey">grey</div>
				</td>
				<td>
						<div class="button flat">Default</div>
						<div class="button flat primary">primary</div>
						<div class="button flat secondary">secondary</div>
						<div class="button flat blue">blue</div>
						<div class="button flat yellow">yellow</div>
						<div class="button flat orange">orange</div>
						<div class="button flat red">red</div>
						<div class="button flat green">green</div>
						<div class="button flat grey">grey</div>
				</td>
		</tr>
</table>
```

Loading
```loading-types.html
<div class="button loading"><span class="loader"</span></div>
<div class="button primary rounded loading"><span class="loader"</span></div>
```
*/

.button,
input[type="submit"] {
	// Exclude Checkbox & Radio buttons
	/* Setup defaults */
	display: inline-flex;
	vertical-align: middle;
	border: solid $button-border-width $default-color;
	font: inherit;
	font-size: 1rem;
	line-height: normal;
	cursor: pointer;
	background: $default-color;
	color: good-contrast($default-color);
	border-radius: $radius;
	padding: math.div($padding, 2.5) math.div($padding, 1.5);
	margin-right: math.div($padding, 2);
	user-select: none;
	transition: all $fast-speed;

	&:hover {
		background: scale-color($default-color, $lightness: -10%);
		border-color: scale-color($default-color, $lightness: -10%);
		color: good-contrast($default-color);
		box-shadow: 0 0 0 1px scale-color($default-color, $lightness: -10%);
	}

	&:active,
	&:focus,
	&:visited {
		color: good-contrast($default-color);
	}

	&.active {
		background: scale-color($default-color, $lightness: -10%);
		border-color: scale-color($default-color, $lightness: -10%);
		color: good-contrast($default-color);
	}

	&.small {
		font-size: .775rem;
		padding: .3rem .9rem;
		border-width: 1px;

		&.icon {
			padding: .25rem;
		}

		&.ghost {
			border-width: 1px;
		}

		.icon {
			font-size: .9rem;
		}
	}

	&.big {
		font-size: 1.5rem;
		padding: .8rem 2rem;

		.icon {
			font-size: 1.7rem;
		}
	}

	&.huge {
		font-size: 2rem;
		padding: 1rem 2.5rem;

		.icon {
			font-size: 2.2rem;
		}
	}

	&.expand {
		padding: .6em;
		font-size: .4rem;

		.icon {
			font-size: .7rem;
			margin: 0;
		}
	}

	&.inverted,
	&.ghost {
		background: $white;
		color: $default-color;
		border-color: $default-color;

		&:hover {
			border-color: scale-color($default-color, $lightness: -10%);
			background: scale-color($default-color, $lightness: 90%);
		}
	}

	&.ghost {
		background: none;

		&:hover {
			box-shadow: 0 0 0 2px $default-color inset;
			border-color: $default-color;
		}

		&.active {
			background: rbga($default-color, .3);
		}

		&.inverted {
			background: none;
			color: good-contrast($default-color);
			border-color: scale-color($default-color, $lightness: 20%);

			&:hover {
				background: rbga($default-color, .3);
			}
		}
	}

	&.disabled {
		background: rgba($default-color, .2);
		border-color: transparent;
		color: rgba($text-color, .35);
		cursor: not-allowed;

		&:hover {
			background: rgba($default-color, .2);
			border-color: transparent;
			box-shadow: none;
		}
	}

	&.flat {
		background: none;
		border-color: transparent;
		color: rgba($default-color, .95);

		&:hover {
			color: $default-color;
			background: rgba($default-color, .1);
			border-color: transparent;
			box-shadow: none;
		}

		&:active,
		&:focus,
		&:visited,
		&.active {
			background: rgba($default-color, .2);
			border-color: transparent;
		}
	}

	&.loading {
		background: rgba($text-color, .2);
		border-color: transparent;
		color: rgba($text-color, .35);
		cursor: wait;
		box-shadow: none;

		&:hover {
			transform: inherit;
			box-shadow: none;
			background: rgba($text-color, .2);
		}

		.loader {
			margin-top: 0;
			margin-bottom: 0;
			height: 1.2rem;
			width: 1.2rem;
		}
	}

	@each $swatch,
	$color in $swatch {

		&.#{$swatch} {
			background: $color;
			border-color: $color;
			color: good-contrast($color);

			&:hover {
				background: scale-color($color, $lightness: -10%);
				border-color: scale-color($color, $lightness: -10%);
				box-shadow: 0 0 0 1px scale-color($color, $lightness: -10%);
			}
		}

		&.active.#{$swatch} {
			background: scale-color($color, $lightness: -10%);
			border-color: scale-color($color, $lightness: -10%);
			color: good-contrast($color);
		}

		&.disabled.#{$swatch} {
			background: rgba($color, .2);
			border-color: transparent;
			color: rgba($color, .5);
			cursor: not-allowed;

			&:hover {
				background: rgba($color, .2);
				border-color: transparent;
				box-shadow: none;
			}
		}

		&.inverted,
		&.ghost {
			&.#{$swatch} {
				border-color: $color;
				background: $white;

				/* @if (lightness( $color ) < 60) {
					color: scale-color($color, $lightness: -10);
				} @else {
					color: scale-color($color, $lightness: -20%);
				} */

				@if (lightness($color) > 70) {
					color: scale-color($color, $lightness: -20%);
				}

				@else {
					color: $color;
				}

				&:hover {
					border-color: scale-color($color, $lightness: -10%);
					background: scale-color($color, $lightness: 90%);
				}

			}
		}

		&.ghost.#{$swatch} {
			background: none;

			&:hover {
				box-shadow: 0 0 0 2px $color inset;
				border-color: $color;
			}

			&.active {
				background: rgba($color, .3);
				z-index: 1;
			}

			&.inverted {
				color: $white;
				border-color: scale-color($color, $lightness: 20%);

				&:hover {
					background: rgba($color, .2);
				}
			}
		}

		&.flat.#{$swatch} {
			background: none;
			border-color: transparent;
			color: $color;

			&:hover {
				background: rgba($color, .1);
				border-color: transparent;
				box-shadow: none;
			}

			&:active,
			&:focus,
			&:visited,
			&.active {
				background: rgba($color, .3);
				border-color: transparent;
			}
		}

		&.loading.#{$swatch} {
			background: rgba($color, .2);
			border-color: transparent;
			color: rgba($color, .5);

			&:hover {
				background: rgba($color, .2);
				border-color: transparent;
				box-shadow: none;
			}

			.loader {
				margin-top: 0;
				margin-bottom: 0;
				height: 1.2em;
				width: 1.2em;
				border-top-color: $color;
			}
		}
	}

	&.rounded {
		border-radius: $rounded;
	}

	&.icon {
		padding: math.div($padding, 2.5);
		line-height: normal;

		&.rounded {
			border-radius: 50%;
		}

		.icon {
			margin: 0;
		}
	}

	&:last-child {
		margin: 0;
	}

	&.full-width {
		width: 100%;
	}

	&.raised {
		box-shadow: $base-shadow;

		&:hover {
			box-shadow: $hover-shadow;
		}

		&:active,
		&:focus,
		&:visited,
		.active {
			box-shadow: $selected-shadow;
		}
	}

	&.fluid {
		margin: auto;
		display: block;
		width: 100%;
	}

	&.responsive {
		@include mobile {
			display: block;
			width: 100%;
			text-align-last: center;
			border-radius: $radius !important;

			&:not(:last-child) {
				margin-bottom: .5rem;
			}
		}
	}

	&.demo {
		border: none;

		@include mobile {
			background: $red;
		}

		@include tablet {
			background: $blue;
		}

		@include desktop {
			background: $yellow;
		}

		@include desktop-xl {
			background: $green;
		}
	}

	.icon {
		margin-right: math.div($padding, 2);
		font-size: 1.2rem;
	}
}

.buttons {
	display: inline-flex;
	align-items: center;
	align-content: center;

	&.fluid {
		display: flex;
		flex-wrap: wrap;

		.button {
			flex: 1;
		}
	}

	&.attached .button {
		&:hover {
			@include z-index(raisedElement);
		}

		&:not(:last-of-type) {
			margin-right: -2px;
		}
	}

	&:not(.attached) .button {
		&:not(:last-of-type) {
			margin-right: 1px;
		}
	}

	.button {
		border-radius: 0;
		margin: 0;

		&.compact {
			padding-right: math.div($padding, 4);
			padding-left: math.div($padding, 4);
		}

		&:first-of-type {
			border-radius: $radius 0 0 $radius;
		}

		&:last-of-type {
			border-radius: 0 $radius $radius 0;
		}
	}
}
